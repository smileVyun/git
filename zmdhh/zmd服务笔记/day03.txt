DNS分离解析

   vim 在命令模式下，ctrl+v 进入可视模式，用光标进行上下左右操作，按大写的I进入插入模式，输入需要的内容，exit退出
   
   vim /~/.vimrc
   set nu
   set ai
   set tabstop=2
   #每次使用vim命令首先执行的内容

   根据客户端的不同,解析同一个域名,得到的解析内容相同

   目的：为客户端提供网路最近的资源

1，由上到下。匹配及停止
2，使用view时，所有的客户端都必须在分类中
3，所有view配置,需要把没有view的内容注释
4，每一个view中的zone 必须是相同的(zone的个数内容要相同）

虚拟机A：
         1，修改主配置文件
	# vim /etc/named.conf 
	view "nsd" {
	   match-clients { 192.168.4.207; };
	   zone "sina.com" IN {
	         type master;
		 file "sina.com.nsd";
	    };
	   };

	 view "other" {
            match-clients { any; };
	    zone "sina.com" IN {
	          type master;
                  file "sina.com.other";
            };
           };

          附：acl test { 1.2.3.4  2.2.5.6 };


          2, 建立地址库文件  

          3，查看解析域名(不同的客户端解析相同的域名，IP不同）


多域名的分离解析

     
RAID磁盘阵列

    廉价，数据备份一种磁盘的阵列（比如：三块磁盘成为一个大磁盘，一块磁盘坏了，数据还可以正常使用，把坏的换了就OK）

  * RAID 0 条带模式
    同一个文档散步存放不同磁盘，至少2块磁盘
    提高写的效率，无容错率，数据存放为平分存放

    RAID 1 镜像模式
    同一个文档散步存放不同磁盘，至少2块磁盘
    效率无提升，可靠性提升，有备份

    RAID 5 高性价比模式
    至少3块磁盘
    数据均匀的分布在三块磁盘，（坏一块，通过校验仍可以推出坏掉一块的数据）

    4块磁盘，多的一块形成热备份。

    RAID6 高性价比/可靠模式
    至少4块磁盘
    相比RAID 5 ，提供2份校验
    允许坏2块

    RAID 0+1（or10）
    整合RAID0 和 1的优势
    提高效率，并进行备份


进程管理
 
    程序：静态的代码，占用磁盘空间


    进程：动态的代码，占用CPU 内存
    唯一标示：PID 
    父进程与子进程  树形结构
    杀死父进程，子进程也会被杀死


查看进程树
    pstree  -a  显示完整的命令行
            -p  列出对应PID编号(ap可连用）

    systemd是所有进程的父进程

查看进程快照
    ps
    - aux：列出正在运行的所有进程

    - -elf：会多一行ppid（该子进程的父进程PID），列出正在运行的所有进程

进程动态排名
    top  -d1 每隔1秒刷新 -u用户名
    按P 按cpu%降序
    按M 按内存降序


pgrep  查询条件

    -l 输出进程名(模糊包含查询）
    -U 指定用户的进程
    -t 指定终端的进程
    -x 指定精确进程 
    
    例：
    # pgrep -lx atd
    963 atd
    # pgrep -lU lisi
    6895 bash
    6933 vim


控制进程

    # jobs         #查看运行中的进程
    # sleep 800 &  #把进程放入后台
    # sleep 800    # ctrl+z 把正在运行的进程放入后台
    # jobs
    [1]-  运行中               oneko -tomoyo &
    [2]+  运行中               sleep 800 &
    [3]+  已停止               sleep 900
    # bg 3  #将3号后台暂停程序继续运行
    # fg 2  #将2号后台程序放入前台

杀死进程
    kill -9  进程号  （pid / 后台任务编号）  -9 强制杀
    killall 
    pkill  查找条件

    # jobs -l
    [1]-  6994 运行中               oneko -tomoyo &
    [3]+  7058 运行中               sleep 900 &
    
    # kill 7058 
    -killall -9 -u 用户名  #杀死该用户开启所有的进程
    强制踢出一个用户 


日志管理

    记录系统，程序运行中发生的各种事件
    通过查看日志，排除故障
    
    常见的日志文件
    /var/log/messages  记录内核消息，各种服务的公共消息
    /var/log/dmesg     记录系统启动过程的消息
    /var/log/cron      记录cron计划任务的消息
    /var/log/maillog   记录邮件收发消息
    /var/log/secure    记录与访问限制相关的消息


日志分析

    tailf：实时跟踪日志
    #who 
    #last     #最近登陆成功的
    #lastb    #最近登陆失败的

     journalctl | grep  **  用命令查看日志
     journalctl  -u 服务名
















































