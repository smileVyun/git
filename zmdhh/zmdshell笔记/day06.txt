sed复制剪切

   H从上往下复制
   G从下往上复制回去
   H 为加空行复制    h 为不加空行复制
   G 为追加到下一行  g 为覆盖第几行
   例：(大写H/G为追加，小写h/g为覆盖) 
   # cat /hh
   1
   2
   3
   4
   5
   6
   7
   8
   # sed '3H;5G;7G' /hh   # 第3行复制到第5行 为空行+第3行 和复制到第7行 空行+第3行
   1
   2
   3
   4
   5

   3
   6
   7

   3
   8


awk工具(判断不同列的默认条件为 ，)
   逐行处理，过滤查找数据

   格式：awk [选项] '[条件]{指令}' 文件
   Awk过滤数据时支持仅打印某一列，如第2列、第5列等。

   # awk '{print $2,$3}' /hh   # 打印第二、三列  没有第二三列的行就打印空列
   ai ni
   ai wo
   zai ye


   you zhend
   
   用-F 修改以什么为条件的分隔符识别(空格就不算分割符了)
   # awk -F: '{print $1}' /etc/passwd
   root
   bin
   daemon
   adm
   lp
   sync

   # awk -F[:/] '{print $1,$10}' /etc/passwd 
     # 以:or/ 作为分隔符 读取第1 第10列

   NR 文件当前行的行号
   NF 文件当前行的列数

   # awk -F: '{print NR,NF}' /hh
   1 2
   2 3
   3 1
   4 1
   5 1
   6 1
   7 5
   8 1
   9 1
   $NF 可查看本列最后一个内容

   # awk -F: '{print $1,"heihei",$3}' /hh  # ""的内容相当于echo
   wo heihei 
   ni heihei wo
   wxy heihei M

   # tailf /var/log/secure   # 查看谁远程本机的信息

   awk  [选项]  ' BEGIN{指令} {指令} END{指令}'  文件

   BEGIN{ } 行前处理，读取文件内容前执行，指令执行1次
   { } 逐行处理，读取文件过程中执行，指令执行n次 
   END{ } 行后处理，读取文件结束后执行，指令执行1次

   # awk 'BEGIN{Ac=32;print Ac*3}'
   96

   # awk 'BEGIN{print 3.5+9.1}'
   12.6

   # awk 'BEGIN{x=0} /bash$/{x++} END{print x}'  /etc/passwd
   3
     # 查找有多少个用户用bash解释器的 (x不定义默认为0)

   # awk -F: 'BEGIN{print "用户名 UID 家目录"} {print $1,$3,$6} END{print "总用户量:"NR}' /etc/passwd | column -t
   用户名                     UID    家目录
   root                 0      /root
   bin                  1      /bin
   daemon               2      /sbin
   adm                  3      /var/adm
   lp                   4      /var/spool/lpd
   注：column -t 自动整理对齐表格

awk处理条件的设置,可以进行"字符串",数字的比较

   # awk -F: '$1~/root/' /etc/passwd
     # ~为匹配的意思  查找第一列有root的

   # awk  'NR==3' /etc/passwd
     # 查看行数为3的内容

   # awk -F: '$3>=1000' /etc/passwd

   # awk -F: '$1=="root"' /etc/passwd

   # awk -F: '$3>10&&$3<100' /etc/passwd  
     # 查看第三列>10 and 第三列<100

   # awk -F: '$3>1000||$3<10' /etc/passwd
     # 查看第三列>1000 or 第三列<10

   # seq 100 | awk '$1%6==0'  # 查看100以内可以被6整除的数

   # seq 2050 | awk '$1%4==0&&$1%100!=0||$1%400==0'
     # 查询是否为闰年


awk,if语句
   if(判断){命令}
   if(判断){命令}else{}

   if ($3>=1000){x++}
   # awk -F: '{if($3>=1000){x++}else{y++}} END{print x,y}' /etc/passwd
   13  39

   # awk 'BEGIN{a[2]=55;a[1]=100;print a[1],a[2]}'
   100 55

awk,for语句
   # awk 'BEGIN{b[0]=11;b[1]=22;b[2]=33;for (i in b)print i,b[i]}'
     # i为[ ]内的数字
   0 11
   1 22
   2 33

   # ab -c 100 -n 100000 http://172.25.0.11/
   模拟100人 访问网站10W次 
   DOC攻击 deny of service0 

   # awk '{IP[$1]++} END{for(i in IP){print IP[i],i}}' /var/log/httpd/access_log | sort -nr   (-n为按数字派，-r为按倒序排，-k 0-9为指定第几列排序，默认按第一列从小到大排)
   150445 172.25.0.250
   272 ::1
   
   $! 最后一个后台进程的PID
   netstat -ntulp |grep -q nginx  # 查询nginx服务是否启动



















   































